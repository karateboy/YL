# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)

GET		/login						controllers.Login.prompt
GET		/logout						controllers.Login.logout
POST	/authenticate				controllers.Login.authenticate

GET		/HistoryTrend				controllers.Query.historyTrend
GET		/JSON/HistoryTrend/:epaMonitor/:monitorType/:reportUnit/:start/:end	controllers.Query.historyTrendChart(epaMonitor, monitorType, reportUnit, start, end, outputTypeStr="html")
GET		/Excel/HistoryTrend/:epaMonitor/:monitorType/:reportUnit/:start/:end	controllers.Query.historyTrendChart(epaMonitor, monitorType, reportUnit, start, end, outputTypeStr="excel")

GET		/History					controllers.Query.history
GET		/HistoryReport/:epaMonitor/:monitorType/:start/:end	controllers.Query.historyReport(epaMonitor, monitorType, start, end)

GET		/WindRose				controllers.Query.windRose
GET		/MonitorTypeRose		controllers.Query.monitorTypeRose
GET		/WindRoseReport/:monitor/:monitorType/:nWays/:start/:end	controllers.Query.windRoseReport(monitor, monitorType, nWays:Int, start, end)

GET		/Pm25Query				controllers.Query.pm25Query
GET		/Pm25OverLawReport/:epaMonitor/:filterType/:start/:end	controllers.Query.pm25OverLawReport(epaMonitor,filterType, start, end, outputTypeStr="html")
GET		/Excel/Pm25OverLawReport/:epaMonitor/:filterType/:start/:end	controllers.Query.pm25OverLawReport(epaMonitor,filterType, start, end, outputTypeStr="excel")

GET		/PsiQuery				controllers.Query.psiQuery
GET		/PsiOverLawReport/:epaMonitor/:start/:end	controllers.Query.psiOverLawReport(epaMonitor, start, end, outputTypeStr="html")
GET		/Excel/PsiOverLawReport/:epaMonitor/:start/:end	controllers.Query.psiOverLawReport(epaMonitor, start, end, outputTypeStr="excel")

GET		/SitePsiOrder			controllers.Query.sitePsiOrder
GET		/SitePsiOrderReport/:start/:end			controllers.Query.sitePsiOrderReport(start, end, outputTypeStr="html")
GET		/Excel/SitePsiOrderReport/:start/:end			controllers.Query.sitePsiOrderReport(start, end, outputTypeStr="excel")

GET		/DistrictPsiOrder		controllers.Query.districtPsiOrder
GET		/DistrictPsiOrderReport/:start/:end				controllers.Query.districtPsiOrderReport(start, end, outputTypeStr="html")
GET		/Excel/DistrictPsiOrderReport/:start/:end		controllers.Query.districtPsiOrderReport(start, end, outputTypeStr="excel")

GET		/DistrictOrder			controllers.Query.districtOrder
GET		/DistrictOrderReport/:epaMonitorFilter/:monitorType/:start/:end	controllers.Query.districtOrderReport(epaMonitorFilter, monitorType, start, end, outputTypeStr="html")
GET		/Excel/DistrictOrderReport/:epaMonitorFilter/:monitorType/:start/:end	controllers.Query.districtOrderReport(epaMonitorFilter, monitorType, start, end, outputTypeStr="excel")

GET		/MonitorOrder			controllers.Query.monitorOrder
GET		/MonitorOrderReport/:epaMonitorFilter/:monitorType/:start/:end	controllers.Query.monitorOrderReport(epaMonitorFilter, monitorType, start, end, outputTypeStr="html")
GET		/Excel/MonitorOrderReport/:epaMonitorFilter/:monitorType/:start/:end	controllers.Query.monitorOrderReport(epaMonitorFilter, monitorType, start, end, outputTypeStr="excel")

GET		/MonitorTypeOverLaw		controllers.Query.monitorTypeOverLaw()
GET		/MonitorTypeOverLawReport/:epaMonitor/:monitorType/:lawStandard/:start/:end			controllers.Query.mtOverLawReport(epaMonitor,monitorType, lawStandard, start, end, outputTypeStr="html")
GET		/Excel/MonitorTypeOverLawReport/:epaMonitor/:monitorType/:lawStandard/:start/:end	controllers.Query.mtOverLawReport(epaMonitor,monitorType, lawStandard, start, end, outputTypeStr="excel")

GET		/SiteInfo				controllers.Application.siteInfo

GET		/importEpa				controllers.Application.importEpa
GET		/importEpaXLS			controllers.Application.importEpa103
GET		/importEpaCSV			controllers.Application.importEpa100
GET		/importXLS97			controllers.Application.importEpa97
GET		/importPSI				controllers.Application.importPSI
GET		/updatePSI/:year		controllers.Application.updatePSI(year: Int)